name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 10

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache TinyTeX
        id: tinytex-cache
        uses: actions/cache@v4
        with:
          path: ~/.TinyTeX
          key: tinytex-${{ runner.os }}-${{ hashFiles('resume-generator/templates/*.tex') }}
          restore-keys: |
            tinytex-${{ runner.os }}-

      - name: Install TinyTeX (if cache miss)
        if: steps.tinytex-cache.outputs.cache-hit != 'true'
        run: |
          set -e
          echo "Attempting TinyTeX install with mirror fallback logic"
          mirrors=(
            https://ctan.math.illinois.edu/systems/texlive/tlnet
            https://mirrors.rit.edu/CTAN/systems/texlive/tlnet
            https://mirror2.sandyriver.net/pub/ctan/systems/texlive/tlnet
            https://ctan.math.washington.edu/tex-archive/systems/texlive/tlnet
            https://mirrors.ibiblio.org/CTAN/systems/texlive/tlnet
          )
          success=0
          for m in "${mirrors[@]}"; do
            echo "\n--- Trying CTAN mirror: $m ---"
            # The installer accepts --repository which is forwarded to install-tl
            set +e
            wget -qO- "https://yihui.org/tinytex/install-unx.sh" | sh -s - --admin --repository="$m" 2>&1 | tee tinytex-install.log
            code=${PIPESTATUS[1]}
            set -e
            if [ $code -eq 0 ]; then
              success=1
              echo "TinyTeX installed using $m"
              break
            else
              if grep -qi 'older than the local installation' tinytex-install.log; then
                echo "Mirror $m is stale (older revision). Trying next mirror." >&2
              else
                echo "Mirror $m failed (exit $code). Trying next mirror." >&2
              fi
              rm -rf /tmp/texlive tinytex-install.log || true
              sleep 5
            fi
          done
          if [ "$success" -ne 1 ]; then
            echo "All mirrors failed. Exiting." >&2
            exit 1
          fi
          ~/.TinyTeX/bin/*/tlmgr path add
          # Ensure mirror stays set & self-update succeeds (ignore transient failures)
          ~/.TinyTeX/bin/*/tlmgr option repository "$m" || true
          ~/.TinyTeX/bin/*/tlmgr update --self || true
          ~/.TinyTeX/bin/*/tlmgr install collection-latexrecommended collection-fontsrecommended latexmk

      - name: Add TinyTeX to PATH
        run: |
          TEXBIN=$(dirname $(find ~/.TinyTeX/bin -name xelatex -type f | head -n1))
          echo "$TEXBIN" >> $GITHUB_PATH
          xelatex --version

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends pandoc

      - name: Run tests
        run: pnpm test

      - name: Build site (includes resume generation)
        env:
          SITE_URL: https://mcintalmo.github.io
        run: |
          pnpm generate-resume
          pnpm astro build --site "$SITE_URL"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
