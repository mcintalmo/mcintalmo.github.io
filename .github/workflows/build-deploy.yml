name: Build and Deploy

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup PNPM
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Cache TinyTeX
        id: tinytex-cache
        uses: actions/cache@v4
        with:
          path: ~/.TinyTeX
          key: tinytex-${{ runner.os }}-${{ hashFiles('resume-generator/templates/*.tex') }}
          restore-keys: |
            tinytex-${{ runner.os }}-

      - name: Install TinyTeX (if cache miss)
        if: steps.tinytex-cache.outputs.cache-hit != 'true'
        run: |
          wget -qO- "https://yihui.org/tinytex/install-unx.sh" | sh -s - --admin
          ~/.TinyTeX/bin/*/tlmgr path add
          ~/.TinyTeX/bin/*/tlmgr install collection-latexrecommended collection-fontsrecommended latexmk

      - name: Add TinyTeX to PATH
        run: |
          TEXBIN=$(dirname $(find ~/.TinyTeX/bin -name xelatex -type f | head -n1))
          echo "$TEXBIN" >> $GITHUB_PATH
          xelatex --version

      - name: Install pandoc
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends pandoc

      - name: Run tests
        run: pnpm test

      - name: Build site (includes resume generation)
        env:
          SITE_URL: https://mcintalmo.github.io
        run: |
          pnpm generate-resume
          pnpm astro build --site "$SITE_URL"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: dist

  deploy:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
